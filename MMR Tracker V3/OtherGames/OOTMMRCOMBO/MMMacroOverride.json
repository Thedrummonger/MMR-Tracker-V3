{
  // Time
  //"at(x)": "mm_time(at, x)",
  //"after(x)": "mm_time(after, x)",
  //"before(x)": "mm_time(before, x)",
  //"between(a, b)": "after(a) && before(b)",
  "is_day1": "before(NIGHT1_PM_06_00)",
  "is_day2": "after(DAY2_AM_06_00) && before(NIGHT2_PM_06_00)",
  "is_day3": "after(DAY3_AM_06_00) && before(NIGHT3_PM_06_00)",
  "is_day": "is_day1 || is_day2 || is_day3",
  "is_night1": "after(NIGHT1_PM_06_00) && before(DAY2_AM_06_00)",
  "is_night2": "after(NIGHT2_PM_06_00) && before(DAY3_AM_06_00)",
  "is_night3": "after(NIGHT3_PM_06_00)",
  "is_night": "is_night1 || is_night2 || is_night3",
  "first_day": "before(DAY2_AM_06_00)",
  "second_day": "after(DAY2_AM_06_00) && before(DAY3_AM_06_00)",
  "final_day": "after(DAY3_AM_06_00)",
  "midnight": "(after(NIGHT1_AM_12_00) && before(DAY2_AM_06_00)) || (after(NIGHT2_AM_12_00) && before(DAY3_AM_06_00)) || after(NIGHT3_AM_12_00)",

  // Songs
  "can_play_sun": "can_play(SONG_SUN) || can_play(SHARED_SONG_SUN)",
  "can_play_time": "can_play(SONG_TIME) || can_play(SHARED_SONG_TIME)",
  "can_play_epona": "can_play(SONG_EPONA) || can_play(SHARED_SONG_EPONA)",
  "can_play_storms": "can_play(SONG_STORMS) || can_play(SHARED_SONG_STORMS)",

  "has_bottle": "has(BOTTLE_EMPTY) || has(BOTTLE_POTION_RED) || has(BOTTLE_MILK) || event(GOLD_DUST_USED) || has(BOTTLE_CHATEAU)",
  //"has_ocarina_n(x)": "has(OCARINA, x) || has(SHARED_OCARINA, x)",
  //"has_ocarina": "cond(setting(sharedOcarina), cond(setting(fairyOcarinaMm), has_ocarina_n(1), has_ocarina_n(2)), has_ocarina_n(1))",
  //"can_play(song)": "has_ocarina && has(song)",
  "can_break_boulders": "has_explosives || has_mask_goron",
  "can_use_lens": "can_use_lens_strict || trick(MM_LENS)",
  "can_use_lens_strict": "has_magic && (has(LENS) || has(SHARED_LENS))",
  "has_explosives": "has_bombs || has(MASK_BLAST) || has_bombchu",
  "can_use_fire_arrows": "has_magic && has_arrows && (has(ARROW_FIRE) || has(SHARED_ARROW_FIRE))",
  "can_use_ice_arrows": "has_magic && has_arrows && (has(ARROW_ICE) || has(SHARED_ARROW_ICE))",
  "can_use_light_arrows": "has_magic && has_arrows && (has(ARROW_LIGHT) || has(SHARED_ARROW_LIGHT))",
  "can_use_keg": "event(BUY_KEG)",
  "has_mirror_shield": "cond(setting(progressiveShieldsMm, progressive), has(SHIELD, 2), has(SHIELD_MIRROR))",
  "can_use_elegy": "can_play(SONG_EMPTINESS)",
  "can_use_elegy2": "can_play(SONG_EMPTINESS) && (has_mask_zora || has_mask_goron)",
  "can_use_elegy3": "can_play(SONG_EMPTINESS) && has_mask_zora && has_mask_goron",
  "has_bomb_bag": "has(BOMB_BAG) || has(SHARED_BOMB_BAG)",
  "has_bombchu": "has_bomb_bag && (renewable(BOMBCHU) || renewable(BOMBCHU_5) || renewable(BOMBCHU_10) || renewable(BOMBCHU_20))",
  "has_beans": "event(MAGIC_BEANS_PALACE) || (license(MAGIC_BEAN) && renewable(MAGIC_BEAN))",
  "has_weapon": "has(SWORD) || has(GREAT_FAIRY_SWORD)",
  "can_use_beans": "has_beans && (has_bottle || can_play_storms)",
  "scarecrow_hookshot_short": "has_ocarina && can_hookshot_short",
  "scarecrow_hookshot": "has_ocarina && can_hookshot",
  "goron_fast_roll": "has_mask_goron && has_magic",
  "can_use_deku_bubble": "has(MASK_DEKU) && has_magic",
  "has_weapon_range": "has_arrows || can_hookshot_short || has_mask_zora || can_use_deku_bubble",
  "has_paper": "has(DEED_LAND) || has(DEED_SWAMP) || has(DEED_MOUNTAIN) || has(DEED_OCEAN) || has(LETTER_TO_KAFEI) || has(LETTER_TO_MAMA)",
  "can_fight": "has_weapon || has_mask_zora || has_mask_goron",
  "has_goron_song_half": "cond(setting(progressiveGoronLullaby, progressive), has(SONG_GORON_HALF), has(SONG_GORON))",
  "has_goron_song": "cond(setting(progressiveGoronLullaby, progressive), has(SONG_GORON_HALF, 2), has(SONG_GORON))",
  "can_lullaby_half": "has_ocarina && has_goron_song_half && has_mask_goron",
  "can_lullaby": "has_ocarina && has_goron_song && has_mask_goron",
  "has_shield": "renewable(SHIELD_HERO) || has_mirror_shield",
  "can_activate_crystal": "can_break_boulders || has_weapon || has_arrows || can_hookshot_short || has(MASK_DEKU) || has_mask_zora",
  "can_evade_gerudo": "has_arrows || can_hookshot_short || has_mask_zora || has(MASK_STONE)",
  "has_hot_water": "event(GORON_GRAVEYARD_HOT_WATER) || event(TWIN_ISLANDS_HOT_WATER)",
  "has_hot_water_distance": "can_soar && (event(GORON_GRAVEYARD_HOT_WATER) || event(TWIN_ISLANDS_HOT_WATER) || event(WELL_HOT_WATER))",
  "can_goron_bomb_jump": "trick(MM_GORON_BOMB_JUMP) && has_mask_goron && (has_bombs || trick_keg_explosives)",
  //"can_hookshot_n(x)": "has(HOOKSHOT, x) || has(SHARED_HOOKSHOT, x)",
  "can_hookshot_short": "can_hookshot_n(1)",
  "can_hookshot": "cond(setting(shortHookshotMm), can_hookshot_n(2), can_hookshot_n(1))",
  "has_blue_potion": "has_bottle && renewable(POTION_BLUE)",
  "has_red_potion": "has_bottle && (event(RED_POTION) || renewable(POTION_RED) || renewable(BOTTLE_POTION_RED))",
  "has_green_potion": "has_bottle && renewable(POTION_GREEN)",
  "has_milk": "has_bottle && (renewable(MILK) || renewable(BOTTLE_MILK))",
  "has_red_or_blue_potion": "has_red_potion || has_blue_potion",
  "trick_keg_explosives": "can_use_keg && trick(MM_KEG_EXPLOSIVES)",
  "trick_sht_fireless": "has_hot_water_distance && trick(MM_SHT_FIRELESS)",
  "can_reset_time_on_moon": "can_play_time || (setting(majoraChild, none) && event(MAJORA) && trick(MM_MAJORA_LOGIC))",
  "can_reset_time": "can_play_time || (event(MAJORA) && trick(MM_MAJORA_LOGIC))",
  "has_sticks": "event(STICKS) || renewable(STICK) || renewable(STICKS_5) || renewable(STICKS_10) || renewable(SHARED_STICK) || renewable(SHARED_STICKS_5) || renewable(SHARED_STICKS_10) || (setting(sharedNutsSticks) && event(OOT_STICKS))",
  "has_nuts": "event(NUTS) || renewable(NUT) || renewable(NUTS_5) || renewable(NUTS_10) || renewable(SHARED_NUT) || renewable(SHARED_NUTS_5) || renewable(SHARED_NUTS_10) || (setting(sharedNutsSticks) && event(OOT_NUTS))",
  "has_bow": "has(BOW) || has(SHARED_BOW)",
  "has_arrows": "has_bow && (event(ARROWS) || renewable(ARROWS_5) || renewable(ARROWS_10) || renewable(ARROWS_30) || renewable(ARROWS_40) || renewable(SHARED_ARROWS_5) || renewable(SHARED_ARROWS_10) || renewable(SHARED_ARROWS_30) || renewable(SHARED_ARROWS_40))",
  "has_bombs": "has_bomb_bag && (event(BOMBS) || renewable(BOMBS_5) || renewable(BOMBS_10) || renewable(BOMBS_20) || renewable(BOMBS_30) || renewable(SHARED_BOMBS_5) || renewable(SHARED_BOMBS_10) || renewable(SHARED_BOMBS_20) || renewable(SHARED_BOMBS_30))",
  "has_magic": "(has(MAGIC_UPGRADE) || has(SHARED_MAGIC_UPGRADE)) && (event(MAGIC) || has_green_potion || has_blue_potion || event(CHATEAU))",
  "has_rupees": "event(RUPEES)",
  "has_zora_egg": "event(ZORA_EGGS_HOOKSHOT_ROOM) || event(ZORA_EGGS_BARREL_MAZE) || event(ZORA_EGGS_LONE_GUARD) || event(ZORA_EGGS_TREASURE_ROOM) || event(ZORA_EGGS_PINNACLE_ROCK)",
  "has_chateau": "has_bottle && (renewable(CHATEAU) || renewable(BOTTLE_CHATEAU))",
  "has_big_poe": "event(WELL_BIG_POE)",
  "can_kill_baba_nuts": "can_fight || has(MASK_DEKU) || can_hookshot_short || has_explosives || has_arrows",
  "can_kill_baba_sticks": "can_fight || has(MASK_DEKU) || can_hookshot_short || has_explosives || has_arrows",
  "can_kill_baba_both_sticks": "has_weapon || has(MASK_DEKU)",
  "bombers1": "event(BOMBERS_NORTH1) && event(BOMBERS_EAST1) && event(BOMBERS_WEST1)",
  "bombers2": "event(BOMBERS_NORTH2) && event(BOMBERS_EAST2) && event(BOMBERS_WEST2)",
  "bombers3": "event(BOMBERS_NORTH3) && event(BOMBERS_EAST3) && event(BOMBERS_WEST3)",
  "can_soar": "has_ocarina && has(SONG_SOARING) && (has(OWL_CLOCK_TOWN) || has(OWL_MILK_ROAD) || has(OWL_SOUTHERN_SWAMP) || has(OWL_WOODFALL) || has(OWL_MOUNTAIN_VILLAGE) || has(OWL_SNOWHEAD) || has(OWL_GREAT_BAY) || has(OWL_ZORA_CAPE) || has(OWL_IKANA_CANYON) || has(OWL_STONE_TOWER))",
  "can_oot_warp": "setting(crossWarpOot) && has_ocarina && (has(OOT_SONG_TP_LIGHT) || has(OOT_SONG_TP_FOREST) || has(OOT_SONG_TP_FIRE) || has(OOT_SONG_TP_WATER) || has(OOT_SONG_TP_SPIRIT) || has(OOT_SONG_TP_SHADOW))",
  "can_warp": "can_soar || can_oot_warp",

  // Wallets
  //"has_wallet(n)": "cond(setting(childWallets), has(WALLET, n) || has(SHARED_WALLET, n), has(WALLET, n - 1) || has(SHARED_WALLET, n - 1))",
  //"can_use_wallet(n)": "event(RUPEES) && has_wallet(n)",

  // Keys
  //"boss_key(x)": "setting(bossKeyShuffleMm, removed) || has(x)",
  //"small_keys(x, count)": "setting(smallKeyShuffleMm, removed) || has(x, count)",

  // Masks
  "has_mask_bunny": "has(MASK_BUNNY) || has(SHARED_MASK_BUNNY)",
  "has_mask_truth": "has(MASK_TRUTH) || has(SHARED_MASK_TRUTH)",
  "has_mask_keaton": "has(MASK_KEATON) || has(SHARED_MASK_KEATON)",
  "has_mask_zora": "has(MASK_ZORA) || has(SHARED_MASK_ZORA)",
  "has_mask_goron": "has(MASK_GORON) || has(SHARED_MASK_GORON)",

  //CUSTOM OVERRIDES

  //Wallets
  "can_use_wallet_1": "event(RUPEES) && has_wallet(1)",
  "can_use_wallet_2": "event(RUPEES) && has_wallet(2)",
  "can_use_wallet_3": "event(RUPEES) && has_wallet(3)",
  "can_use_wallet_4": "event(RUPEES) && has_wallet(4)",

  //Weird Ocarina logic
  "has_ocarina": "(option{sharedOcarina, true} && ((option{fairyOcarinaMm, true} && has(OCARINA)) || (option{fairyOcarinaMm, false} && has(OCARINA, 2)))) || (option{sharedOcarina, false} && has(OCARINA))"
}