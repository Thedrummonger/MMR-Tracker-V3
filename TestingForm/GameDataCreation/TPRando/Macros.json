{
  "HasDamagingItem": "HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or hasBombs or (Iron_Boots) or (Shadow_Crystal) or (Spinner)",
  "HasSword": "(Progressive_Sword, 1)",
  "CanDefeatAeralfos": "(((Progressive_Clawshot, 1)) and (HasSword or (Ball_and_Chain) or (Shadow_Crystal) or (CanDoNicheStuff and (Iron_Boots))))",
  "CanDefeatArmos": "HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Shadow_Crystal) or ((Progressive_Clawshot, 1)) or hasBombs or (Spinner) or CanUseBacksliceAsSword",
  "CanDefeatBabaSerpent": "HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword",
  "CanDefeatBabyGohma": "HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Slingshot) or ((Progressive_Clawshot, 1)) or hasBombs or CanUseBacksliceAsSword",
  "CanDefeatBari": "CanUseWaterBombs or ((Progressive_Clawshot, 1))",
  "CanDefeatBeamos": "(Ball_and_Chain) or ((Progressive_Bow, 1)) or hasBombs",
  "CanDefeatBigBaba": "HasSword or (Ball_and_Chain) or (((Progressive_Bow, 1)) and CanGetArrows) or (CanDoNicheStuff and (Iron_Boots)) or (Shadow_Crystal) or (Spinner) or hasBombs or CanUseBacksliceAsSword",
  "CanDefeatChu": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or ((Progressive_Clawshot, 1)) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatBokoblin": "(HasSword or (Ball_and_Chain) or (((Progressive_Bow, 1)) and CanGetArrows) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Slingshot) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatBokoblinRed": "(HasSword or (Ball_and_Chain) or (((Progressive_Bow, 3)) and CanGetArrows) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword or (CanDoDifficultCombat and ((Iron_Boots) or (Spinner))))",
  "CanDefeatBombfish": "(((Iron_Boots) or option{logicRules, Glitched} and (Magic_Armor)) and (HasSword or ((Progressive_Clawshot, 1)) or (hasShield and (Progressive_Hidden_Skill, 2))))",
  "CanDefeatBombling": "(HasSword or (Ball_and_Chain) or (((Progressive_Bow, 1)) and CanGetArrows) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or ((Progressive_Clawshot, 1)))",
  "CanDefeatBomskit": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword or (CanDoNicheStuff and (Iron_Boots)))",
  "CanDefeatBubble": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or CanUseBacksliceAsSword)",
  "CanDefeatBulblin": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatChilfos": "(HasSword or (Ball_and_Chain) or (CanDoNicheStuff and (Iron_Boots)) or (Shadow_Crystal) or (Spinner) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatChuWorm": "((HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or CanUseBacksliceAsSword) and (hasBombs or ((Progressive_Clawshot, 1))))",
  "CanDefeatDarknut": "HasSword or (CanDoDifficultCombat and (hasBombs or (Ball_and_Chain)))",
  "CanDefeatDekuBaba": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or ((Progressive_Hidden_Skill, 2)) or (Slingshot) or ((Progressive_Clawshot, 1)) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatDekuLike": "(hasBombs)",
  "CanDefeatDodongo": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatDinalfos": "(HasSword or (Ball_and_Chain) or (Shadow_Crystal))",
  "CanDefeatFireBubble": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or CanUseBacksliceAsSword)",
  "CanDefeatFireKeese": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Slingshot) or (Shadow_Crystal) or CanUseBacksliceAsSword)",
  "CanDefeatFireToadpoli": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or ((Hylian_Shield) and (Progressive_Hidden_Skill, 2)) or (CanDoDifficultCombat and (Shadow_Crystal)))",
  "CanDefeatFreezard": "(Ball_and_Chain)",
  "CanDefeatGoron": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (hasShield and ((Progressive_Hidden_Skill, 2))) or (Slingshot) or (CanDoDifficultCombat and (Lantern)) or ((Progressive_Clawshot, 1)) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatGhoulRat": "(Shadow_Crystal)",
  "CanDefeatGuay": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (CanDoDifficultCombat and (Spinner)) or (Shadow_Crystal) or (Slingshot))",
  "CanDefeatHelmasaur": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatHelmasaurus": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatIceBubble": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or CanUseBacksliceAsSword)",
  "CanDefeatIceKeese": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Slingshot) or (Shadow_Crystal) or CanUseBacksliceAsSword)",
  "CanDefeatPoe": "(Shadow_Crystal)",
  "CanDefeatKargarok": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or CanUseBacksliceAsSword)",
  "CanDefeatKeese": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Slingshot) or (Shadow_Crystal) or CanUseBacksliceAsSword)",
  "CanDefeatLeever": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs)",
  "CanDefeatLizalfos": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatMiniFreezard": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatMoldorm": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs)",
  "CanDefeatPoisonMite": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (Lantern) or (Spinner) or (Shadow_Crystal))",
  "CanDefeatPuppet": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatRat": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Slingshot) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatRedeadKnight": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatShadowBeast": "(HasSword or ((Shadow_Crystal) and CanCompleteMDH))",
  "CanDefeatShadowBulblin": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatShadowDekuBaba": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or ((Progressive_Hidden_Skill, 2)) or (Slingshot) or ((Progressive_Clawshot, 1)) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatShadowInsect": "(Shadow_Crystal)",
  "CanDefeatShadowKargarok": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatShadowKeese": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Slingshot) or (Shadow_Crystal) or CanUseBacksliceAsSword)",
  "CanDefeatShadowVermin": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatShellBlade": "(CanUseWaterBombs or (HasSword and ((Iron_Boots) or (CanDoNicheStuff and (Magic_Armor)))))",
  "CanDefeatSkullfish": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal))",
  "CanDefeatSkulltula": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatStalfos": "(canSmash)",
  "CanDefeatStalhound": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatStalchild": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatTektite": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatTileWorm": "((HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (Shadow_Crystal) or (Spinner) or (CanDoNicheStuff and (Iron_Boots)) or hasBombs or CanUseBacksliceAsSword) and (Boomerang))",
  "CanDefeatToado": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (Spinner) or (Shadow_Crystal))",
  "CanDefeatWaterToadpoli": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (hasShield and (Progressive_Hidden_Skill, 2)) or CanDoDifficultCombat and ((Shadow_Crystal)))",
  "CanDefeatTorchSlug": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (Shadow_Crystal) or hasBombs)",
  "CanDefeatWalltula": "((Ball_and_Chain) or (Slingshot) or (((Progressive_Bow, 1)) and CanGetArrows) or (Boomerang) or ((Progressive_Clawshot, 1)))",
  "CanDefeatWhiteWolfos": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs)",
  "CanDefeatYoungGohma": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Spinner) or (Shadow_Crystal) or hasBombs)",
  "CanDefeatZantHead": "((Shadow_Crystal) or HasSword) or CanUseBacksliceAsSword",
  "CanDefeatOok": "(HasSword or (Ball_and_Chain) or (((Progressive_Bow, 1)) and CanGetArrows) or (CanDoNicheStuff and (Iron_Boots)) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatDangoro": "((HasSword or (Shadow_Crystal) or (CanDoNicheStuff and (Ball_and_Chain) or (((Progressive_Bow, 1)) and hasBombs))) and (Iron_Boots))",
  "CanDefeatCarrierKargarok": "(Shadow_Crystal)",
  "CanDefeatTwilitBloat": "(Shadow_Crystal)",
  "CanDefeatDekuToad": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Shadow_Crystal) or hasBombs or CanUseBacksliceAsSword)",
  "CanDefeatSkullKid": "((Progressive_Bow, 1))",
  "CanDefeatKingBulblinBridge": "((Progressive_Bow, 1))",
  "CanDefeatKingBulblinDesert": "(HasSword or (Ball_and_Chain) or (Shadow_Crystal) or (Progressive_Bow, 2) or CanUseBacksliceAsSword or (CanDoDifficultCombat and ((Spinner) or (Iron_Boots) or hasBombs or (Progressive_Bow, 2))))",
  "CanDefeatKingBulblinCastle": "(HasSword or (Ball_and_Chain) or (Shadow_Crystal) or (Progressive_Bow, 2) or (CanDoDifficultCombat and ((Spinner) or (Iron_Boots) or hasBombs or CanUseBacksliceAsSword)))",
  "CanDefeatDeathSword": "((HasSword or (Ball_and_Chain) or (CanDoNicheStuff and (Iron_Boots))) and ((Boomerang) or ((Progressive_Bow, 1)) or ((Progressive_Clawshot, 1))) and (Shadow_Crystal))",
  "CanDefeatDarkhammer": "(HasSword or (Ball_and_Chain) or ((Progressive_Bow, 1)) or (CanDoNicheStuff and (Iron_Boots)) or (Shadow_Crystal) or hasBombs or (CanDoDifficultCombat and CanUseBacksliceAsSword))",
  "CanDefeatPhantomZant": "((Shadow_Crystal) or HasSword)",
  "CanDefeatDiababa": "canLaunchBombs or ((Boomerang) and (HasSword or (Ball_and_Chain) or (CanDoNicheStuff and (Iron_Boots)) or (Shadow_Crystal) or hasBombs or (CanDoDifficultCombat and CanUseBacksliceAsSword)))",
  "CanDefeatFyrus": "((Progressive_Bow, 1) and (Iron_Boots) and (HasSword or (CanDoDifficultCombat and CanUseBacksliceAsSword)))",
  "CanDefeatMorpheel": "((Zora_Armor) and (Iron_Boots) and HasSword and ((Progressive_Clawshot, 1)))",
  "CanDefeatStallord": "(((Spinner) and HasSword) or (CanDoDifficultCombat and (Spinner)))",
  "CanDefeatBlizzeta": "(Ball_and_Chain)",
  "CanDefeatArmogohma": "(((Progressive_Bow, 1)) and ((Progressive_Dominion_Rod, 1)))",
  "CanDefeatArgorok": "((Progressive_Clawshot, 2) and (Progressive_Sword, 2) and ((Iron_Boots) or (CanDoNicheStuff and (Magic_Armor))))",
  "CanDefeatZant": "(((Progressive_Sword, 3)) and ((Boomerang) and ((Progressive_Clawshot, 1)) and (Ball_and_Chain) and ((Iron_Boots) or (CanDoNicheStuff and (Magic_Armor))) and ((Zora_Armor) or (option{logicRules, Glitched} and CanDoAirRefill))))",
  "CanDefeatGanondorf": "(Shadow_Crystal) and ((Progressive_Sword, 3)) and ((Progressive_Hidden_Skill, 1))",
  "canSmash": "((Ball_and_Chain) or hasBombs)",
  "canBurnWebs": "(Lantern) or hasBombs or (Ball_and_Chain)",
  "hasRangedItem": "((Ball_and_Chain) or (Slingshot) or ((Progressive_Bow, 1)) or ((Progressive_Clawshot, 1)) or (Boomerang))",
  "hasShield": "((Hylian_Shield) or Kakariko Village or Castle Town or (Death Mountain Volcano and CanDefeatGoron))",
  "canLaunchBombs": "(((Boomerang) or ((Progressive_Bow, 1))) and hasBombs)",
  "canCutHangingWeb": "(((Progressive_Clawshot, 1)) or (((Progressive_Bow, 1)) and CanGetArrows) or (Boomerang) or (Ball_and_Chain))",
  "canKnockDownHCPainting": "((Progressive_Bow, 1) or (CanDoNicheStuff and hasBombs or (HasSword and (Progressive_Hidden_Skill, 6))) or (option{logicRules, Glitched} and ((HasSword and CanDoMoonBoots) or CanDoBSMoonBoots)))",
  "canBreakMonkeyCage": "(HasSword or (Iron_Boots) or (Spinner) or (Ball_and_Chain) or (Shadow_Crystal) or hasBombs or (((Progressive_Bow, 1)) and CanGetArrows) or ((Progressive_Clawshot, 1)) or (CanDoNicheStuff and (Progressive_Hidden_Skill, 2)))",
  "canPressMinesSwitch": "(Iron_Boots) or (CanDoNicheStuff and (Ball_and_Chain))",
  "canFreeAllMonkeys": "(canBreakMonkeyCage and ((Lantern) or ((option{smallKeySettings, Keysy} and (hasBombs or (Iron_Boots)))) and canBurnWebs and (Boomerang) and CanDefeatBokoblin and (((Forest_Temple_Small_Key, 4)) or (option{smallKeySettings, Keysy}))))",
  "canKnockDownHangingBaba": "(((Progressive_Bow, 1)) or ((Progressive_Clawshot, 1)) or (Boomerang))",
  "canBreakWoodenDoor": "((Shadow_Crystal) or HasSword or canSmash or CanUseBacksliceAsSword)",
  "hasBombs": "(((Filled_Bomb_Bag)) and (Kakariko Village or (Eldin Field Water Bomb Fish Grotto and ((Progressive_Fishing_Rod, 1))) or (Kakariko Village and Castle Town) or City in The Sky Entrance))",
  "CanUseWaterBombs": "((Filled_Bomb_Bag) and (Kakariko Village or (Eldin Field Water Bomb Fish Grotto and ((Progressive_Fishing_Rod, 1))) or (Kakariko Village and Castle Town)))",
  "CanGetArrows": "(canClearForest or Lost Woods)",
  "canCompletePrologue": "((HasSword and (Slingshot) and ((Progressive_Fishing_Rod, 1)) and ((North_Faron_Woods_Gate_Key) or (option{smallKeySettings, Keysy}))) or (option{skipPrologue, True}))",
  "CanCompleteMDH": "(canCompleteLakebedTemple or (option{skipMdh, True}))",
  "canClearForest": "((canCompleteForestTemple or (option{faronWoodsLogic, Open})) and canCompletePrologue)",
  "CanCompleteEldinTwilight": "option{eldinTwilightCleared} or (canCompletePrologue and canClearForest)",
  "canCompleteForestTemple": "(Forest Temple Boss Room and CanDefeatDiababa)",
  "canCompleteGoronMines": "(Goron Mines Boss Room and CanDefeatFyrus)",
  "canCompleteLakebedTemple": "(Lakebed Temple Boss Room and CanDefeatMorpheel)",
  "canCompleteArbitersGrounds": "(Arbiters Grounds Boss Room and CanDefeatStallord)",
  "canCompleteSnowpeakRuins": "(Snowpeak Ruins Boss Room and CanDefeatBlizzeta)",
  "canCompleteTempleofTime": "(Temple of Time Boss Room and CanDefeatArmogohma)",
  "canCompleteCityinTheSky": "(City in The Sky Boss Room and CanDefeatArgorok)",
  "canCompletePalaceofTwilight": "(Palace of Twilight Boss Room and CanDefeatZant)",
  "canCompleteAllDungeons": "(canCompleteForestTemple and canCompleteGoronMines and canCompleteLakebedTemple and canCompleteArbitersGrounds and canCompleteSnowpeakRuins and canCompleteTempleofTime and canCompleteCityinTheSky and canCompletePalaceofTwilight)",
  "HasBug": "Female_Phasmid or Male_Phasmid or Female_Grasshopper or Male_Grasshopper or Female_Pill_Bug or Male_Pill_Bug or Male_Ant or Female_Ant or Female_Beetle or Male_Beetle or Female_Snail or Male_Snail or Female_Dayfly or Male_Dayfly or Female_Mantis or Male_Mantis or Female_Stag_Beetle or Male_Stag_Beetle or Female_Ladybug or Male_Ladybug or Female_Dragonfly or Female_Butterfly or Male_Butterfly or Male_Dragonfly",
  "CanDoDifficultCombat": "false",
  "CanDoNicheStuff": "option{logicRules, Glitched}",
  "CanUseBacksliceAsSword": "CanDoNicheStuff and (Progressive_Hidden_Skill, 3)",
  "CanGetBugWithLantern": "false",
  "HasSwordOrBS": "(Progressive_Sword, 1) or (Progressive_Hidden_Skill, 3)",
  "HasBottle": "((Empty_Bottle) or (Sera_Bottle) or (Jovani_Bottle) or (Coro_Bottle)) and (Lantern)",
  "CanDoBSMoonBoots": "Progressive_Hidden_Skill, 3 and Magic_Armor",
  "CanDoMoonBoots": "HasSword and (Magic_Armor or (Iron_Boots))",
  "CanDoAirRefill": "CanUseWaterBombs and (HasSword or Progressive_Clawshot) and (Magic_Armor or Iron_Boots)"
}